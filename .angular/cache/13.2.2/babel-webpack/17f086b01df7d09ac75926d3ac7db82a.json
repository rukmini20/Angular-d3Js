{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'; //import { data } from 'jquery';\n\nlet TableComponent = class TableComponent {\n  constructor(http) {\n    this.http = http; //this.idracsList();\n\n    this.getJSON().subscribe(data => {\n      data => this.idrac = data.toString(); // this.idrac.join(); \n\n\n      console.log(data);\n    });\n  } // idracsList(){\n  //   this.http.get('http://localhost:4200/data.json').subscribe(\n  //     data => this.idrac = data\n  //   );\n  //   console.log(this.idrac);\n  // }\n\n\n  getJSON() {\n    return this.http.get(\"./assets/data.json\");\n  }\n\n  ngOnInit() {\n    function makeplot() {\n      Plotly.d3.csv(\"https://raw.githubusercontent.com/rukmini-calsoft/data/main/CpuUsage.csv\", function (data) {\n        processData(data);\n      });\n    }\n\n    ;\n\n    function processData(allRows) {\n      //console.log(allRows);\n      var x = [],\n          y = [];\n\n      for (var i = 0; i < allRows.length; i++) {\n        const row = allRows[i];\n        x.push(row['_time']);\n        y.push(row['_value']);\n      }\n\n      console.log('X', x, 'Y', y);\n      makePlotly(x, y);\n    }\n\n    function makePlotly(x, y) {\n      var plotDiv = document.getElementById(\"plot\");\n      var traces = [{\n        x: x,\n        y: y\n      }];\n      Plotly.newPlot('myDiv', traces);\n    }\n\n    ;\n    makeplot();\n    d3.csv(\"https://raw.githubusercontent.com/rukmini-calsoft/data/main/Temprature.csv\", function (err, rows) {\n      function unpack(rows, key) {\n        return rows.map(function (row) {\n          return row[key];\n        });\n      }\n\n      var trace1 = {\n        type: \"scatter\",\n        mode: \"lines\",\n        name: 'High',\n        x: unpack(rows, '_time'),\n        y: unpack(rows, '_value'),\n        line: {\n          color: 'cyan'\n        }\n      };\n      var trace2 = {\n        type: \"scatter\",\n        mode: \"lines\",\n        name: 'Low',\n        x: unpack(rows, '_time'),\n        y: unpack(rows, '_value'),\n        line: {\n          color: '#007db8'\n        }\n      };\n      var data = [trace1, trace2];\n      var layout = {\n        title: '',\n        xaxis: {\n          autorange: true,\n          range: ['2022-02-07', '2022-02-08'],\n          rangeselector: {\n            buttons: [{\n              count: 1,\n              label: '1d',\n              step: 'day',\n              stepmode: 'backward'\n            }, {\n              count: 6,\n              label: '2d',\n              step: 'day',\n              stepmode: 'backward'\n            }, {\n              step: 'all'\n            }]\n          },\n          rangeslider: {\n            range: ['2022-02-07', '2022-02-07']\n          },\n          type: 'date'\n        },\n        yaxis: {\n          autorange: true,\n          range: [86.8700008333, 138.870004167],\n          type: 'linear'\n        }\n      };\n      Plotly.newPlot('multi', data, layout);\n    });\n    d3.csv(\"https://raw.githubusercontent.com/rukmini-calsoft/data/main/AggregateUsage.csv\", function (err, rows) {\n      function unpack(rows, key) {\n        return rows.map(function (row) {\n          return row[key];\n        });\n      }\n\n      var trace1 = {\n        x: unpack(rows, '_time'),\n        y: unpack(rows, '_value'),\n        line: {\n          color: '#17BECF'\n        },\n        type: 'bar'\n      };\n      var data = [trace1];\n      var layout = {\n        title: ''\n      };\n      Plotly.newPlot('bar', data, layout);\n    });\n  }\n\n};\nTableComponent = __decorate([Component({\n  selector: 'table-cmp',\n  moduleId: module.id,\n  templateUrl: 'table.component.html',\n  styleUrls: ['table.component.css']\n}), __metadata(\"design:paramtypes\", [HttpClient])], TableComponent);\nexport { TableComponent };","map":null,"metadata":{},"sourceType":"module"}